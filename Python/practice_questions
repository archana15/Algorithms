1. IDE
    Integrated Development Environment 

2. What code would you write to create a string containing the words Happy Birth-
day!? Write some code to point a reference called text at that newly created object.
    text = "Happy Birthday"

3. What code would you write to take the string you created in the last question
and split it into a list containing two strings? Point the reference lst at this newly
created list.
    >>> text = "Happy Birthday"
    >>> lst = text.split()
    >>> lst
    ['Happy', 'Birthday']

4. What code would you write to upper-case the string created in the second ques-
tion. Point the reference named bDayWish at this upper-cased string.
    >>> text = 'happy birthday'
    >>> bDayWish = text.upper()
    >>> bDayWish 
    'HAPPY BIRTHDAY'

5. If you were to execute the code you wrote for answering the last three questions,
what would the string referenced by text contain after executing these three lines
of code?
    >>> text
    'happy birthday'

6. How would you create a dictionary that maps “Kent” to “Denise” and maps
“Steve” to “Lindy”? In these two cases “Kent” and “Steve” are the keys and
“Denise” and “Lindy” are the values.
    >>> ques_6 = {'Kent':'Denise', 'Steve':'Lindy'}
    >>> ques_6
    {'Steve': 'Lindy', 'Kent': 'Denise'}
    >>> ques_6.keys()
    ['Steve', 'Kent']
    >>> ques_6.values()
    ['Lindy', 'Denise']    

7.Consult Chap. 17. How would you map a key to a value as in the previous prob-
lem when the dictionary was first created as an empty dictionary? HINT: This
would be called setting an item in the documentation in the appendix. Write
a short piece of code to create an empty dictionary and then map “Kent” to
“Denise” and “Steve” to “Lindy”.
    >>> empty_dict = {}
    >>> empty_dict['Kent'] = 'Denise'
    >>> empty_dict['Steve'] = 'Lindy'
    >>> empty_dict 
    {'Steve': 'Lindy', 'Kent': 'Denise'}




